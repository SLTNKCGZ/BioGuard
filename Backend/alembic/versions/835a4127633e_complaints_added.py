"""complaints added.

Revision ID: 835a4127633e
Revises: 03bcc7ea94be
Create Date: 2025-07-24 17:04:21.212085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '835a4127633e'
down_revision: Union[str, Sequence[str], None] = '03bcc7ea94be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('response', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_complaints_id'), 'complaints', ['id'], unique=False)
    op.create_table('user_complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('complaint_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_complaints_id'), 'user_complaints', ['id'], unique=False)
    op.drop_index(op.f('ix_user_compliments_id'), table_name='user_compliments')
    op.drop_table('user_compliments')
    op.drop_index(op.f('ix_compliments_id'), table_name='compliments')
    op.drop_table('compliments')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compliments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('compliments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('response', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='compliments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_compliments_id'), 'compliments', ['id'], unique=False)
    op.create_table('user_compliments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('compliment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['compliment_id'], ['compliments.id'], name=op.f('user_compliments_compliment_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_compliments_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_compliments_pkey'))
    )
    op.create_index(op.f('ix_user_compliments_id'), 'user_compliments', ['id'], unique=False)
    op.drop_index(op.f('ix_user_complaints_id'), table_name='user_complaints')
    op.drop_table('user_complaints')
    op.drop_index(op.f('ix_complaints_id'), table_name='complaints')
    op.drop_table('complaints')
    # ### end Alembic commands ###
